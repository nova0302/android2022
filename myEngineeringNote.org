

* Service

* Receiver
** Java Codes
*** MainActivity.java
#+begin_src java
public class MainActivity extends AppCompatActivity implements AutoPermissionsListener {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        AutoPermissions.Companion.loadAllPermissions(this, 101);
    }
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        AutoPermissions.Companion.parsePermissions(this, requestCode, permissions, this);
    }
    @Override
    public void onDenied(int i, @NonNull String[] strings) {
        showToast("Permission Deined: " + strings.length);
    }
    @Override
    public void onGranted(int i, @NonNull String[] strings) {
        showToast("Permission Granted: " + strings.length);
    }
    public void showToast(String data){
        Toast.makeText(this, data, Toast.LENGTH_SHORT).show();
    }
}
#+end_src
*** SmsReceiver.java
#+begin_src java
public class SmsReceiver extends BroadcastReceiver {
    private static final String TAG = "SmsReceiver";
    @Override
    public void onReceive(Context context, Intent intent) {
        Log.d(TAG, "onReceive called");
        Bundle bundle = intent.getExtras();
        SmsMessage[] messages = parseSmsMessage(bundle);
        if (messages != null && messages.length > 0){
            String sender = messages[0].getOriginatingAddress();
            String contents = messages[0].getMessageBody();
            Log.d(TAG, "sender: " + sender + ", contents: " + contents);
            sendToActivity(context, sender, contents);
        }
    }
    public void sendToActivity(Context context, String sender, String contents){
        Intent intent = new Intent(context, SmsActivity.class);
        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_SINGLE_TOP|Intent.FLAG_ACTIVITY_CLEAR_TOP);
        intent.putExtra("sender", sender);
        intent.putExtra("contents", contents);
        context.startActivity(intent);
    }
    private SmsMessage[] parseSmsMessage(Bundle bundle){
        Object[] objs = (Object[]) bundle.get("pdus");
        SmsMessage[] messages = new SmsMessage[objs.length];
        int smsCount = objs.length;
        for (int i=0; i<smsCount; i++){
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){
                String format = bundle.getString("format");
                messages[i] = SmsMessage.createFromPdu((byte[])objs[i], format);
            }else{
                messages[i] = SmsMessage.createFromPdu((byte[])objs[i]);
            }
        }
        return messages;
    }
}
#+end_src
*** SmsActivity.java
#+begin_src java
  public class SmsActivity extends AppCompatActivity {
    TextView textView2;
    TextView textView3;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sms);
        textView2 = findViewById(R.id.textView2);
        textView3 = findViewById(R.id.textView3);
        Intent intent = getIntent();
        processIntent(intent);
    }
    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        processIntent(intent);
    }
    public void processIntent(Intent intent){
        if (intent != null){
            String sender = intent.getStringExtra("sender");
            String  contents = intent.getStringExtra("contents");
            textView2.setText(sender);
            textView3.setText(contents);
        }
    }
}
#+end_src

** AndroidManifest.xml
#+begin_src xml
  <?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.myreceiver">
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.MyReceiver"
        tools:targetApi="31">
        <activity
            android:name=".SmsActivity"
            android:exported="false" />
        <receiver
            android:name=".SmsReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_RECEIVED" />
            </intent-filter>
        </receiver>

        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
#+end_src

** gradle
*** build.gradle
#+begin_src gradle
  dependencies {
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.github.pedroSG94:AutoPermissions:1.0.3' <------ add
}
#+end_src

*** settings.gradle
#+begin_src gradle
  dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" } <----- add
    }
}
#+end_src


* Actionbar
** MainActivity.java
#+begin_src java
public class MainActivity extends AppCompatActivity {
    ActionBar actionBar;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        actionBar = getSupportActionBar();
        actionBar.setLogo(R.drawable.home);
        actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME|ActionBar.DISPLAY_USE_LOGO);
    }
    @Override
    public boolean onCreateOptionsMenu(@NonNull Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }
    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        int curId = item.getItemId();
        switch (curId){
            case R.id.menu_refresh:
                showToast("selected refresh menu!");
                break;
            case R.id.menu_search:
                showToast("selected search menu!");
                break;
            case R.id.menu_settings:
                showToast("selected settings menu!");
                break;
            default:break;
        }
        return super.onOptionsItemSelected(item);
    }
    public void showToast(String data){
        Toast.makeText(this, data, Toast.LENGTH_SHORT).show();
    }
}
#+end_src
** menu_main.xml
#+begin_src xml
  <menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <item android:id="@+id/menu_refresh"
        android:title="refresh"
        android:icon="@drawable/menu_refresh"
        app:showAsAction="always"/>

    <item android:id="@+id/menu_search"
        android:title="search"
        android:icon="@drawable/menu_search"
        app:showAsAction="always"/>

    <item android:id="@+id/menu_settings"
        android:title="settings"
        android:icon="@drawable/menu_settings"
        app:showAsAction="always"/>
</menu>
#+end_src


* Fragment 1
** main methods
  - getSupportFragmentManager.beginTransaction.replace.commit
  - getSupportFragmentManager.findFragmentById
  - rootView.findViewById
  - getActivity


** activity_main.xml
#+begin_src xml
  <?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/container"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity" >
    <fragment
        android:id="@+id/mainFragment"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:name="com.example.myfragment02.MainFragment"/>
</FrameLayout>
#+end_src

** MainActivity.java
#+begin_src java

 
  public class MainActivity extends AppCompatActivity {
      MainFragment mainFragment;
      MenuFragment menuFragment;
      @Override
      protected void onCreate(Bundle savedInstanceState) {
	  super.onCreate(savedInstanceState);
	  setContentView(R.layout.activity_main);
	  mainFragment = (MainFragment) getSupportFragmentManager().findFragmentById(R.id.mainFragment);
	  menuFragment = new MenuFragment();
      }
      public void onFragmentChanged(int index){
	  if (index == 0){
	      getSupportFragmentManager().beginTransaction().replace(R.id.container, mainFragment).commit();
	  }else if (index == 1){
	      getSupportFragmentManager().beginTransaction().replace(R.id.container, menuFragment).commit();
	  }
      }
  } 
#+end_src

** MainFragment.java
#+begin_src java
public class MainFragment extends Fragment {
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_main, container, false);

        Button button = rootView.findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                MainActivity activity = (MainActivity)getActivity();
                activity.onFragmentChanged(1);
            }
        });
        return  rootView;
    }
}
#+end_src

** MenuFragment.java
#+begin_src java
  public class MenuFragment extends Fragment {
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        ViewGroup rootView =(ViewGroup) inflater.inflate(R.layout.fragment_menu, container, false);

        Button button = rootView.findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                MainActivity activity = (MainActivity) getActivity();
                activity.onFragmentChanged(0);
            }
        });
        return rootView;
    }
}
#+end_src
  
* Fragment2
** 1. MainActivity.java
#+begin_src java
public class MainActivity extends AppCompatActivity implements ImageSelectionCallback {
    ListFragment listFragment;
    ViewerFragment viewerFragment;
    int[]images = {R.drawable.dream01, R.drawable.dream02, R.drawable.dream03};

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        FragmentManager manager = getSupportFragmentManager();
        listFragment =(ListFragment) manager.findFragmentById(R.id.listFragment);
        viewerFragment = (ViewerFragment) manager.findFragmentById(R.id.viewerFragment);
    }

    @Override
    public void onImageSelected(int position) {
        viewerFragment.setImage(images[position]);
    }
}
#+end_src
** 2. ListFragment.java
#+begin_src java
  
public class ListFragment extends Fragment {
    ImageSelectionCallback callback;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ViewGroup rootView = (ViewGroup)inflater.inflate(R.layout.fragment_list, container, false);

        Button button = rootView.findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (callback != null){
                    callback.onImageSelected(0);
                }
            }
        });

        Button button2 = rootView.findViewById(R.id.button2);
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (callback != null){
                    callback.onImageSelected(1);
                }
            }
        });

        Button button3 = rootView.findViewById(R.id.button3);
        button3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (callback != null){
                    callback.onImageSelected(2);
                }
            }
        });
        return rootView;
    }

    @Override
    public void onAttach(@NonNull Context context) {
        super.onAttach(context);
        if (context instanceof ImageSelectionCallback){
            callback = (ImageSelectionCallback) context;
        }
    }

}
#+end_src
** ViewerFragment.java
#+begin_src java
  public class ViewerFragment extends Fragment {
    ImageView imageView;
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ViewGroup rootView  = (ViewGroup) inflater.inflate(R.layout.fragment_viewer, container, false);
        imageView = rootView.findViewById(R.id.imageView);
        return rootView;
    }
    public void setImage(int resId){
        imageView.setImageResource(resId);
    }
}
#+end_src

** activity_main.xml
#+begin_src xml
  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity" >

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1">
        <fragment
            android:id="@+id/listFragment"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:name="edu.smh.game.myfragment2_01.ListFragment"/>

    </FrameLayout>

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1">
        <fragment
            android:id="@+id/viewerFragment"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:name="edu.smh.game.myfragment2_01.ViewerFragment"/>

    </FrameLayout>
</LinearLayout>
#+end_src
** fragment_list.xml
#+begin_src xml
  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <Button
        android:id="@+id/button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="1st Image" />

    <Button
        android:id="@+id/button2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="2nd Image" />

    <Button
        android:id="@+id/button3"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="3rd image" />
</LinearLayout>
#+end_src
** fragment_viewer.xml
#+begin_src xml
  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:srcCompat="@drawable/dream01" />
</LinearLayout>
#+end_src
  

* Activity
#+begin_src java
  Button button = findViewById(R.id.button);
  button.setOnClickListener(new View.OnClickListener() {
	  @Override
	  public void onClick(View view) {
	      Intent intent = new Intent(getApplicationContext(), MenuActivity.class);
	      startActivityForResult(intent, 101);
	  }
      });

  @Override
  protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
      super.onActivityResult(requestCode, resultCode, data);
      if (requestCode == 101){
	  if (data != null){
	      String name =  data.getStringExtra("name");
	      if (name != null){
		  Toast.makeText(this, "Result: " + data, Toast.LENGTH_SHORT).show();
	      }
	  }
      }
  }
#+end_src

* Intent
#+begin_src java
  Button button = findViewById(R.id.button);
  button.setOnClickListener(new View.OnClickListener() {
	  @Override
	  public void onClick(View view) {
	      Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("tel:010-8631-3221"));
	      startActivity(intent);
	  }
      });
#+end_src

* View
- view.setOnTouchListener
- textView.append
- textView.setText(name)
- View.OnClickListener()
* Button
- button.setOnClickListener
- View.OnClicklistener
* Edit
- editText.getText().toString()
* Toast
- Toast toastView = Toast.makeText(getApplicationContext(), "toast message", Toast.LENGTH_LONG)
- toastView.setGravity(Gravity.TOP|Gravity.LEFT, 200, 800)
- toastView.show()
- *SHOW()*
  #+begin_src java

    public class MainActivity extends AppCompatActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    setContentView(R.layout.activity_main);

	    Button button = findViewById(R.id.button);
	    button.setOnClickListener(new View.OnClickListener() {
		    @Override
		    public void onClick(View view) {
			Toast toastView = Toast.makeText(getApplicationContext(), "toast message", Toast.LENGTH_LONG);
			toastView.setGravity(Gravity.TOP|Gravity.LEFT, 200, 800 );
			toastView.show();
		    }
		});
	}
    }
  #+end_src

  - onConfigurationChanged
  - onTouch
   - GestureDetector
    - onDown
    - onShowPress
    - onSingleTapUp
    - onScroll
    - onLongPress
    - onFling
   - MotionEvent
    - event.getAction
    - event.getX
    - event.getY
    - Motionevent.ACTION_DOWN
    - Motionevent.ACTION_MOVE
    - Motionevent.ACTION_UP
   - onSavedInstanceState
    - outState.putString("name", name)
    - savedInsanceState.getString(key: "name")
   
* General
  - findViewById
  - Toast.makeText

* AndroidManifest.xml
  - android:configChanges="orientation|screenSize|keyboardHidden"
  - android:screenOrienation="landscape"
      
* AlertDialog.Builder
  - Alertdialog.Builder builder = new Alertdialog.Builder(this)
  - builder.setTitle("Info")
  - builder.setMessage("Quit?")
  - builder.setIcon
  - builder.setPositiveButton
  - builder.setNegativeButton
  - Alertdialog dialog = builder.create();
  - dialog.show();
    
* Activity vs Framgment
https://charlezz.medium.com/activity-vs-fragment-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-56ce7fa2bfc4
https://stackoverflow.com/questions/10478233/why-fragments-and-when-to-use-fragments-instead-of-activities
https://www.geeksforgeeks.org/difference-between-a-fragment-and-an-activity-in-android/

* misc
** style.xml -> themes.xml
https://hyunjungchoi.tistory.com/76

** Drawer Activity Error
   - Duplicate class androidx.lifecycle.ViewModelLazy found in modules lifecycle-viewmodel-2.5.0-runtime (androidx.lifecycle:lifecycle-viewmodel:2.5.0) and lifecycle-viewmodel-ktx-2.3.1-runtime (androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1)
   - https://stackoverflow.com/questions/69817925/problem-duplicate-class-androidx-lifecycle-viewmodel-found-in-modules
   - implementation "androidx.lifecycle:lifecycle-viewmodel:2.5.1"
   - implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

** java reflection
  - https://codechacha.com/ko/reflection/
    
** Receiver(App Permission) Related Errors
  - Your project has set `android.useAndroidX=true`, but configuration `:app:debugRuntimeClasspath` still contains legacy support libraries, which may cause runtime issues.
  - 해결 방법: 안드로이드 스튜디오: Gradle Scripts > gradle.properties > android.enableJetifier=true 추가 > Sync Now 클릭
  - 출처: https://webit22.tistory.com/73 [조약돌_마을:티스토리]
  - https://ideajini.tistory.com/15

** Android dependency duplicate error - MyReceiver example
https://stackoverflow.com/questions/44653261/android-dependency-has-different-version-for-the-compile-and-runtime
