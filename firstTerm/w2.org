* week 2

** FrameLayout
#+begin_src java
public class MainActivity extends AppCompatActivity {
    int index=0;
    ImageView iv1;
    ImageView iv2;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        iv1 = findViewById(R.id.imageView);
        iv2 = findViewById(R.id.imageView2);
    }

    public void onBtn1Clicked(View v){
        changeImage();
    }

    public void changeImage(){
        if (index == 0){
            iv1.setVisibility(View.VISIBLE);
            iv2.setVisibility(View.INVISIBLE);
        }else{
            iv1.setVisibility(View.INVISIBLE);
            iv2.setVisibility(View.VISIBLE);
        }
        index +=1;
        index = index % 2;
    }
}
#+end_src

** ScrollView
*** strings.xml
#+begin_src xml
  <resources>
    <string name="app_name">MyScrollView</string>
    <string name="try_message">남은 도전횟수는 %d입니다.\n</string>
</resources>
#+end_src

*** MainActivity.java
#+begin_src java

   public class MainActivity extends AppCompatActivity {
       int index = 0;
       TextView textView;

       @Override
       protected void onCreate(Bundle savedInstanceState) {
	   super.onCreate(savedInstanceState);
	   setContentView(R.layout.activity_main);

	   textView = findViewById(R.id.textView);

	   Button button = findViewById(R.id.button);
	   button.setOnClickListener(new View.OnClickListener() {
	       @Override
	       public void onClick(View view) {
		   addText();
	       }
	   });
       }
       public void addText(){
           if (index % 10 == 0){
	     textView.setText("");
	   }
	   if(index % 2 == 0){
	       String msg = index + " Hello world!\n";
	       textView.append(msg);
	   }else{
	       //Resources res = getResources();
	       //String text = String.format(res.getString(R.string.try_message), index);
	       String text = String.format(getString(R.string.try_message), index);
	       textView.append(text);
	   }
	   index++;
       }
   }

#+end_src

** Orientation
#+begin_src java
public class MainActivity extends AppCompatActivity {
    String name;
    EditText editText;
    EditText editText2;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        showToast("onCreate!");

        editText = findViewById(R.id.editText);
        editText2 = findViewById(R.id.editText2);

        Button button = findViewById(R.id.button);
        if (button != null){
            button.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    if (editText != null){
                        name = editText.getText().toString();
                        showToast("user input assigned to name variable");
                    }
                }
            });
        }
        if (savedInstanceState != null){
            if (editText2 != null){
                name = savedInstanceState.getString("name");
                editText2.setText(name);
                showToast("the value is restored:" + name);
            }
        }
    }

    @Override
    protected void onSaveInstanceState(@NonNull Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putString("name", name);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        showToast("onDestroy!");
    }

    public void showToast(String data){
        Toast.makeText(this, data, Toast.LENGTH_SHORT).show();
    }
}
#+end_src

** Events
#+begin_src java
  public class MainActivity extends AppCompatActivity {
    TextView textView;
    GestureDetector detector;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textView = findViewById(R.id.textView);

        View view = findViewById(R.id.view);
        view.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                int action = event.getAction();
                float cX = event.getX();
                float cY = event.getY();
                if (action == MotionEvent.ACTION_DOWN){
                    println("finger pressed: " + cX + ", " + cY);
                }else if (action == MotionEvent.ACTION_MOVE){
                    println("finger move: " + cX + ", " + cY);
                }else if (action == MotionEvent.ACTION_UP){
                    println("finger up: " + cX + ", " + cY);
                }
                return true;
            }
        });

        detector = new GestureDetector(this, new GestureDetector.OnGestureListener() {
            @Override
            public boolean onDown(MotionEvent motionEvent) {
                println("onDown");
                return true;
            }
            @Override
            public void onShowPress(MotionEvent motionEvent) {
            }
            @Override
            public boolean onSingleTapUp(MotionEvent motionEvent) {
                return false;
            }
            @Override
            public boolean onScroll(MotionEvent motionEvent, MotionEvent motionEvent1, float v, float v1) {
                return false;
            }
            @Override
            public void onLongPress(MotionEvent motionEvent) {
                println("onLongPress");
            }
            @Override
            public boolean onFling(MotionEvent motionEvent, MotionEvent motionEvent1, float v, float v1) {
                println("onFling" + v + ", " + v1);
                return true;
            }
        });

        View view2 = findViewById(R.id.view2);
        view2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View view, MotionEvent event) {
                detector.onTouchEvent(event);
                return true;
            }
        });
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK){
            println("system [BACK] button pressed");
            return true;
        }
        return false;
    }

    public void println(String data){
        textView.append(data + "\n");
    }
}
#+end_src

** SnackBar
#+begin_src java
  public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button button= findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "snackbar!", Snackbar.LENGTH_LONG).show();
            }
        });

        Button button2 = findViewById(R.id.button2);
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                showMessage();
            }
        });
    }

    public void showMessage(){
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("info");
        builder.setMessage("quit?");
        builder.setIcon(android.R.drawable.ic_dialog_alert);
        builder.setPositiveButton("yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                Toast.makeText(getApplicationContext(), "yes button pressed!", Toast.LENGTH_SHORT).show();
            }
        });
        builder.setNegativeButton("no", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                Toast.makeText(getApplicationContext(), "no button pressed!", Toast.LENGTH_SHORT).show();
            }
        });

        AlertDialog dialog = builder.create();
        dialog.show();
    }
}
#+end_src


** LayoutInflater
- Layoutinflater inflater = (Layoutinflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE)
- inflater.inflate(R.layout.sub1, container, true)
- Toast.makeText(this.getApplicationContext(), "partial screen added", Toast.LENGTH_SHORT).show();

  #+begin_src java

    public class MenuActivity extends AppCompatActivity {
	LinearLayout container;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    setContentView(R.layout.activity_menu);

	    container = findViewById(R.id.container);

	    Button button = findViewById(R.id.button2);
	    button.setOnClickListener(new View.OnClickListener() {
		    @Override
		    public void onClick(View view) {
			addLayout();
		    }
		});
	}
	public void addLayout(){
	    LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	    inflater.inflate(R.layout.sub1, container, true);
	    Toast.makeText(this, "partial view is added!", Toast.LENGTH_SHORT).show();
	}
    }
  #+end_src


